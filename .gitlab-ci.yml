image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  REGISTRY_IMAGE_BASE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/loci-base
  REGISTRY_IMAGE_REQUIREMENTS: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/loci-requirements

services:
- docker:dind

before_script:
  - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}

stages:
- build_base
- build_requirements
- deploy

loci-base:
  stage: build_base
  script:
    # Build and push loci-base
    - docker build dockerfiles/ubuntu_xenial
      --tag ${REGISTRY_IMAGE_BASE}:ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_BASE}:ubuntu_xenial

# Build requirements wheels for each Openstack release we use.
# Ceilometer, Glance
requirements_kilo:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=kilo-eol
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_kilo
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_kilo

# Neutron, Nova
#requirements_liberty:
#  stage: build_requirements
#  script:
#    - docker build .
#      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
#      --build-arg PROJECT=requirements
#      --build-arg PROJECT_REF=liberty-eol
#      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_liberty
#    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_liberty

# Cinder, Keystone, Swift
requirements_mitaka:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=mitaka-eol
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_mitaka
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_mitaka

# Heat, Octavia
requirements_queens:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=stable/queens
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_queens
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_queens

# Horizon, Trove
#requirements_rocky:
#  stage: build_requirements
#  script:
#    - docker build .
#      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
#      --build-arg PROJECT=requirements
#      --build-arg PROJECT_REF=stable/rocky
#      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_rocky
#    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_rocky

# Magnum, Aodh
#requirements_stein:
#  stage: build_requirements
#  script:
#    - docker build .
#      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
#      --build-arg PROJECT=requirements
#      --build-arg PROJECT_REF=stable/stein
#      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_stein
#    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_stein

# No projects.
#requirements_train:
#  stage: build_requirements
#  script:
#    - docker build .
#      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
#      --build-arg PROJECT=requirements
#      --build-arg PROJECT_REF=stable/train
#      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_train
#    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:xenial_train

