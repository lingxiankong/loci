image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  REGISTRY_IMAGE_BASE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/loci-base
  REGISTRY_IMAGE_REQUIREMENTS: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/loci-requirements

services:
  - docker:dind

before_script:
  - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}

stages:
  - build_base
  - build_requirements
  - deploy

loci-base:
  stage: build_base
  script:
    # Build and push loci-base
    - docker build dockerfiles/ubuntu_xenial
      --tag ${REGISTRY_IMAGE_BASE}:ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_BASE}:ubuntu_xenial



# Build requirements wheels for each Openstack release we use.
# Ceilometer, Glance
requirements_kilo:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=kilo-eol
      --build-arg DIST_PACKAGES=libvirt-dev
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:kilo-ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:kilo-ubuntu_xenial

# Neutron, Nova
requirements_liberty:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=liberty-eol
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:liberty-ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:liberty-ubuntu_xenial

# Keystone, Swift
requirements_mitaka:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=mitaka-eol
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:mitaka-ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:mitaka-ubuntu_xenial

# Cinder(though codebase is Mitaka, see https://gerrit.dmz.wgtn.cat-it.co.nz/#/c/28399/)
requirements_newton:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=stable/newton
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:newton-ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:newton-ubuntu_xenial

# No projects: Ocata, Pike.

# Octavia
requirements_queens:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=stable/queens
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:queens-ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:queens-ubuntu_xenial

# Horizon, Trove
requirements_rocky:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=stable/rocky
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:rocky-ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:rocky-ubuntu_xenial

# Magnum, Aodh
requirements_stein:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=stable/stein
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:stein-ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:stein-ubuntu_xenial

# Heat
requirements_train:
  stage: build_requirements
  script:
    - docker build .
      --build-arg FROM=${REGISTRY_IMAGE_BASE}:ubuntu_xenial
      --build-arg PROJECT=requirements
      --build-arg PROJECT_REF=stable/train
      --tag ${REGISTRY_IMAGE_REQUIREMENTS}:train-ubuntu_xenial
    - docker push ${REGISTRY_IMAGE_REQUIREMENTS}:train-ubuntu_xenial
